package democrypt

import (
	"math/rand"
	"testing"
	"time"
)

const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"

var seededRand *rand.Rand = rand.New(rand.NewSource(time.Now().UnixNano()))

func stringWithCharset(length int, charset string) string {
	b := make([]byte, length)
	for i := range b {
		b[i] = charset[seededRand.Intn(len(charset))]
	}
	return string(b)
}

func randomString(length int) string {
	return stringWithCharset(length, charset)
}

var data = []string{
	"th1s1smyp@ssw0rd",
	randomString(4),
	randomString(16),
	randomString(100),
}
var aes128Hash = "1234567890123456"
var aes192Hash = "123456789012345612345678"
var aes256Hash = "12345678901234561234567890123456"

// AES Encrypted Values:
var CS_AES_CFB8_128 = "vZYJl180MSjG4C2FLhqkJ6cN6GI7/YJ8viZfe+Q6tcA="
var CS_AES_CFB8_192 = "07z3M8zgEtv/IgyDEbr86oKMESgRXxfTqIffedWV3Bw="
var CS_AES_CFB8_256 = "Gg5IAfmBmTB/DFIfJJ1Wts+e8l0nKNVa6XAXFVfEVrw="
var CS_AES_CBC_128 = "LM9SeQ+gsDRfyf0jnNpjA83D/1b/KSMpM+/VxtPiCKNnIpCTQcMURkHNFYTl3fzk"
var CS_AES_CBC_192 = "dUI9ySK67BE4QZspNNaGRea7bAwJBUtiPb5d21r5pDLjBPCHfUl0lgGaTma9IXkx"
var CS_AES_CBC_256 = "w8UbBtYvXBq4wXzAHVu/0+Ftr+zPTukDnFCQ0rqANGCfsotUH3akq0IVKl3jgSEw"

// RSA Encrypted Values:
var CS_RSA_PKCS1V1_5 = "QLAPKvBmzUFyN5bv0K4VCrhaGe6lh5Zfcd/6fGFb576ybRRWXdgYrpM4GOAAQ4fgsSRm6C9xLuJn5iRXyPZ8BJhFEqvdFpV2j+jac21IIkxG7sqTyLQn4FF6FdUf1bC3fPrC8fNS+J59mpUE5p4dDia3im/YgA4LYaOlY0VGLR5sukdrt2EsWtmHN41a9XDRtklSdfP3ReU9K0NlX+hL3SvJ35TZxkEZMvMKQXYKkfWvhvJARbrZY6JBae1p2n8kRipK0hXDbVgy2kraL1lBYJLGFstsexG9DpL7ydIgxYO3mckS+YoGT5irSM6uoEs5Ffi2YJ2JNWaxwHqTs4fz2Q=="
var CS_RSA_OAEP = "LjgIXwqQYp+Rx4knbuj22e8q0+ixtjIxsdbFdhweXTmqtaudNZLqI0HsaiwIvw3r8/OokVHR9zZtbpGPQinPX4jQf0uQ29FUufd3oYdhC1cV7hjvfQDuYELXl5kKqPUtdYPqgD/tapZAXW8F3RLroxe36I96wjbhrcLZhXu8n0FLvgbbIDZkQ8AgNxVpthqb7LIrVMjIPq3gqlImLZMyDbPhsMnzW708eFBTHlR2dh1H93nj6Tsh+971Mbfmo4iboLRtJzUg2CvrfEHv3SOARKkKFconINPkaTHyZYUW/UIbeTF/Ui1aLpjMkhcUUqKFMVGmH7ZlmT6gHGUZVEy13w=="

// X509 Encrypted Values:
var CS_X509_OAEP = "3/Z5MG7SmIrEpPDmHeB8lzGVLNA96gYPacv4nF2vD5u2RuDidkgAsbxR9171H7B07gFyQklis/9m7RCrT4b0V6KMocwkBVXoBwxwIbYi9ErTYvez+gj7UjUQvE7sHpNWei15UdF+78tqrh37ygRiG2zE6+pWyE82OaEPROVoXwSDMPrxJtVW1P3JsjKybA1kEB/iPn/gdhZixDxoWScUKZHsxD613qs1jsPQ23paJARwWlwmvR5zBCYv1uyYc1kPIXgstvOOl4+rXA/PpRfVDdM4WFSveaJp4zT5mWgQyo4PVQpboXs0KjPxfEN+ott7ZeOxMNrZ9EAl0RERYNVpig=="
var CS_X509_PKCS1V1_5 = "mCxiVk2QcIO6/JQOR/pEhYa33hralrMLEZI+AtOKsbPbm5VTvMU32cA71iHaMOJyXYzFzDfvhFjS+ksZLfue7S3C24rwge0GY5PP4yxUhvA2yZWWrjmi7TF4b/BUICV2GF13tT9Iy34hbTGQcUgDaozmF1/332kInUM2Tc3pPTbMyB5YferSKnsLRQooV2kmnNZGHb0Gnt0GRxXm4H/Tm+rDsmbz7TbOJjzJefxaKgdVD2/gt5h7aDRQYvTuE59Lzn2b/jM4bMQxoR9owKcodt6duvQ79Ruefc+P2aWHTXBnOHNbvgUwpeqiAyW7sI98TRXzK4W3o1u4cakDJkbXJQ=="

// AES Encrypted Values:
var JS_AES_CFB_128 = "z11VkLYh2sxTyMSh4wr/VQyNGS0IuJelSVJKSH1piYc="
var JS_AES_CFB_192 = "4+eUuv4Hr03hXXVz2utBVZmn9fT5E/N95Qq4qIuHWdw="
var JS_AES_CFB_256 = "1cXCXZZxT4sZc2FzzLGyrE7OZ32GxWLmv2irxJ4KzqI="
var JS_AES_CFB8_128 = "1ZzwOUXOhhbCrxOXQvnO8lA0he+bZo7KCfu6J1w75MI="
var JS_AES_CFB8_192 = "EJ9WAk9j4i7j9Dm0xiRh8x5r7/KZHLXO/Y34wC7m7jE="
var JS_AES_CFB8_256 = "Y7i1V8qehMsUs0Oo8NDWOqT7rSMr1rRY+gP6Pa+7peU="
var JS_AES_CBC_128 = "ysMa13YpdgO0zsRmZlKUF7uarZsCuDutYdjjgnntSRm8dAZWj4Nm2yo4bRGAZrWq"
var JS_AES_CBC_192 = "d52n/ivp5Vakrx30+IVn7kUjVc4gzCl1dZDa53+8GmvpgrH8GNQcnxJGPW9QkZd0"
var JS_AES_CBC_256 = "RK3HQA6FhecHKMGZIMR+jOs6VnKxLT2Y2YYY/IEPxeGp687czg6iGDomrH/K9Gsh"

// RSA Encrypted Values:
var JS_RSA_OAEP = "by+ECCKCT8YzHJSmZLZwJKDY01PpMVFOBHhbvZxIQju15Vbhjmg1U7UU+w4dPVGDuApOwY2sLsy+vcabsbqFBotBDQr0wNqPz6ZcjtjDbi5mXvytjd4YGFGDh40U2EiVrMI8lcfVQ/tgWqQ3o7IuOcllAaKFmWexKX+S6esMxkEwlWYQ/anU5wsYtG6E2KhxvI9uL0H/8ycWge0tAl0Vc1p0jEwjmAOozfz0Lzo6Z63tBM+8qNpveRUSLwVlNDW/2RqNYInyfld5vthJuON2EAAFrOaD6NivRLutLkTm+QcIHjMXtNgkYi4t4X0uoziAa8Fq/VdPgHrq9IXxEqz3TA=="
var JS_RSA_PKCS1V1_5 = "Qfe9Nd+KEVFgikZeUVAXoopFbJ1/nOWFjKIkhgKt794lZUzv4EbgF7MbVuKzwiI5XnLamJ+5Ki96xNjPEo7WQNbF9AQVwXhhuwj83OLxB8Jps6zyshQn4FbQ0q7trboscHD7rMDMBsn+MPyHz1oYI1C/C9v8eUoCTc7UEo1UcAoQTid1oEigayrR2x15TQY5gLuaTRvpMkqbUUOI1sOgHr5QOsDkqJJWdeE82xhjOthVFUJ+gJrDTFcq7tqYI9FL++nAHjDq4tLS/by1Lif8ivZ3Q+4x2NWlYjUYpFwBT4FULBX58v/PRpr3E3Puh5rs47jHzGdLyMYMx8xm5tC8Ww=="

// X509 Encrypted Values:
var JS_X509_OAEP = "b+M8mkbPEXfmwSn4Pq36ZdTWJKxqwAscWfvGeJav/mg80hPevM1NkTXXgAOqxeN9ReZNRp31orvsxh+8MVdNQcVMxIpbe/4bTJ7F3HUpbLJKjHtfxllKII9dFjtgpFqqfajsc/6gefXMAZ8Rp/T7Q1943nMrcp3FVTA8TNzeYfWQbS0VDjPSfreaqaK0O2m96m02fEViWuxf4dB/BIrKMcIU7JbpZ2Pwz43HkwQuzCRBNmfM3Fe1UsVIODg/1mTEvOU6DgpU7gbfV+vc0C1KWSjJLVPdWbocExTmcpfJaSRY92w4Pr2ANzjGdUWcYOs5ePUu71+r2IVMa9grl8HCTA=="
var JS_X509_PKCS1V1_5 = "jAH/fnDGo2N8Zn0zxz2WuqwnSIT83fNifIaEZpu+7xefQkdcjciRuTKSRe6WtWNF3B+dSZqWo4WaxLs2vps17tN1qjZAuAJ+8jPHl0tstDiYCZ+uPwRjZbMzGXD80Gl09AeQdgRm6vMEJXX2YnknoD5EdnSM8fgYFrPfl5XWhim62/ToYTZlFTIaYkNxnGIgMsin+3YjX1k8bJJGnQ6KszgojblY5fetzX3OxJApwKseofs2END5CFbW97shezJQsL0DXiZ6SshVTJ3VQ3e28Lmogaqt/a3BYGa2qM6yKG6h7ZXuVJs1BviwtoZgjnUn2gR2MtsPuYCP3YBGBRxY0g=="

// AES Encrypted Values:
var PY_AES_CFB8_128 = "mllIL/0l03VULBmJZpLfHgnpEIgBY20C6eUDd/C4nf0="
var PY_AES_CFB8_192 = "BKf2TvLAX/XhhobBBI90h9TapCweKd27M3vk5OEUcEc="
var PY_AES_CFB8_256 = "0/2/ZETH0ItnFwq2HG8Bz+1yRyi8Qn43GMBBJgbWxyM="
var PY_AES_CBC_128 = "w+9OjMn4Z6YeCrzo7DmhTpL++Udp/vMU+0nulOMcN0JL7iwYIEzKl9iGCVgzCuRf"
var PY_AES_CBC_192 = "0PuhDzNNaDdFuIFYFN7wmt4ucCWNqYLs3mJdauJgOLx9GBH5zQ6BNQwdjd85I4Hd"
var PY_AES_CBC_256 = "BALwcIvh+HaYRkkbuNuUfBWSfUlElpJNOY5YX8AvvLA9bI2N+966RAKRZFG0FZuW"

// RSA Encrypted Values:
var PY_RSA_PKCS1V1_5 = "fGbqSNgYCioKV7Kz/RXsOqSLp2e1vUAGnOJ3MMCMoOP+tTLiz69hyJRoPYlZwVkepOWmnEM2i3IZzAfqA7FzICecsjjk/hJOC3D6I+D2L4PVXPyTBsLSxvu9va8F/KzEfUBh/ysuw+JeSUc7k6OAsMPdGZPa8cyGDagKCPrGonaCe8Jnqac+zf81/a5sIche2YOqvQnz3V8ESR3XYuS3WYIn7LHkIFvfb4oxDgN1jSpxSZNImdmmLgjN0pW1Vp/UGQQAhnGgJW2Hs3noQtswq0O0XM3hpHJGzV6NA7eKTUSe1X1BrcAI3cUqwlL0XNBVnsNoq/Mj/Z1/4DgvMl34yg=="
var PY_RSA_OAEP = "jbEtUjq4qFzMb1+1LZRO8AZi6UHqm2YYAQjEzYfM5XAYysSdPaFy9EtPFZmgM5ZxbNkThOSvRU2yw9tKUR46F/HRxtqCcnRnbNr+nZoGYRSZzqjyQQsNOGxLBG0X4K0TugvZAu3zU/nFbytEZX/OM/RkiagztXcTGWGWbvfRZ/wvLZTuVH1nAdI9r33PQGceUwplwJ8WFl3amMCC2OejitIXBrkgiHpuAz2IMfj/PM3HN2hykPCb7tTxNmUtc0050NMLaVHYQgxtmQSSCpUPaCz9kZxyjqU1+QYGWw03bgeA02D9tXz13h3j2E9a7CW+Ut6LBja6vOPqnu3oF/p9dw=="

// X509 Encrypted Values:
var PY_X509_PKCS1V1_5 = "LlxYVfvKyx8JYWCQWzP44lrVxrIOpjBLxl14eHL/VnQneCHuF7ltRpmnYuVyI7jJHwFDTHokquF4AeTsWwj8zpkTNuWAPPINZ7fL3mfLUqDr+m/P7sCYYMefYFr7cQauS5jQzf60Csbx+U1MKt21/f0IZO00R4VU0S4D3lVY6b2Rs1YhGUYm6rREeSt2jjXO/QtE5gLB8fyEVD7qph+eMvdOkdPwBSr2QtOeL/ol7tEf5ER2oBONEmi0LEXsmc1D/lcFVEdDyRr+ZkQsWd3gUrgpnccBIiC8B9gfrnV2LIfCq4oGQDC+x9uW7/VcofQ5XQ/GaCbqPM47GSy4Uahc6A=="
var PY_X509_OAEP = "uhkBnjBbi56po+XUy8py8hcsDq7zWUpW7//nBn0Ld6roL1LYz1+6o6EK2h+6itr6eeZz2zIiE++eOKHyTdI1IttL04lxbSKHchXRxUmVbk0AJHSRL3rQSMBUHown7YsH9NnnQTiT9+IoqtVUvNo7JM6oA1Ikcv9N9VEPgEbbYvVRLoH4nQt+EGSr6KVX8Uwjh8hBJvZkohpv4OhODailatEEnCPI1224pbchBGd1ebrfFL5VBcWv01KsmbYlYaEolpd7mcXYBtfcv078aA1CmpopHp4B9a+eBXuAkmZ5V4RKWPNeqIx9sSVXaoWAu1Q2DjJ1X6WwNlu+1UuVK106bg=="

func skipNotCompatible(t *testing.T) {
	t.Skip("not compatible")
}
